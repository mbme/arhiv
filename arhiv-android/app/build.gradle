plugins {
  id 'com.android.application'
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Load your keystore.properties file into the keystoreProperties object.
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
  namespace 'me.mbsoftware.arhiv'
  compileSdk 35

  defaultConfig {
    applicationId 'me.mbsoftware.arhiv'
    minSdk 30 // WARN: MUST match cargo ndk --platform flag

    versionCode = (System.getenv("VERSION_CODE") ?: "1").toInteger()
    versionName = System.getenv("ARHIV_VERSION") ?: "dev-build"

    ndk {
      //noinspection ChromeOsAbiSupport
      abiFilters 'arm64-v8a' // only build for 64-bit ARM
    }

    vectorDrawables {
      useSupportLibrary true
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix ".debug"
      versionNameSuffix "-dbg"
      resValue "string", "app_name", "Arhiv Debug"
    }

    release {
      resValue "string", "app_name", "Arhiv"
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  signingConfigs {
    release {
      keyAlias keystoreProperties['keyAlias']
      keyPassword keystoreProperties['keyPassword']
      storeFile file(keystoreProperties['storeFile'])
      storePassword keystoreProperties['storePassword']
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
  }
}

dependencies {
  implementation 'androidx.webkit:webkit:1.13.0'
  implementation 'androidx.appcompat:appcompat:1.7.0'
  implementation 'androidx.biometric:biometric:1.1.0'
  implementation "com.squareup.okhttp3:okhttp:4.12.0"

  implementation(platform('org.jetbrains.kotlin:kotlin-bom:2.1.10'))
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}
